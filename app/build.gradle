/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

apply plugin: 'com.android.application'

apply plugin: 'androidx.navigation.safeargs'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'io.sentry.android.gradle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "mozilla.lockbox"
        minSdkVersion 23
        //noinspection OldTargetApi
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        lintConfig file("lint-config.xml")
        warningsAsErrors true
        baseline file("lint-baseline.xml")
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:${android_support_version}"
    implementation "com.android.support:cardview-v7:${android_support_version}"
    implementation "com.android.support:design:${android_support_version}"
    implementation "com.android.support:recyclerview-v7:${android_support_version}"
    implementation "com.android.support:support-v4:${android_support_version}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.jakewharton.rxbinding2:rxbinding:${rxbinding_version}"
    implementation "com.jakewharton.rxbinding2:rxbinding-design-kotlin:${rxbinding_version}"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:${rxbinding_version}"
    implementation "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7-kotlin:${rxbinding_version}"
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'
    implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation "org.mozilla.components:service-sync-logins:${rootProject.ext.android_components_version}"
    implementation "org.mozilla.components:service-firefox-accounts:${rootProject.ext.android_components_version}"
    implementation "org.mozilla.components:service-telemetry:${rootProject.ext.android_components_version}"
    implementation "org.mozilla.components:lib-dataprotect:${rootProject.ext.android_components_version}"
    implementation 'io.sentry:sentry-android:1.7.10'
    implementation 'com.github.magiepooh:recycler-itemdecoration:1.1.1@aar'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"
    implementation "android.arch.navigation:navigation-fragment:$navigation_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigation_version"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.22.0'
    testImplementation 'org.robolectric:robolectric:4.0'
    testImplementation "org.powermock:powermock-module-junit4:2.0.0-beta.5"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.0-beta.5"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.1"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.3.1"
    androidTestImplementation "androidx.test:core:1.0.0"
    androidTestImplementation "androidx.test.ext:junit:1.0.0"
    androidTestImplementation 'org.mockito:mockito-android:2.22.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:3.0.2") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    androidTestImplementation 'br.com.concretesolutions:kappuccino:1.2.1'
    ktlint "com.github.shyiko:ktlint:0.28.0"
}

def outputDir = "${project.buildDir}/reports/ktlint/"

task ktlint(type: JavaExec, group: "verification", description: "Runs ktlint.") {
    inputs.files(fileTree(dir: "src", include: "**/*.kt"),
            fileTree(dir: ".", include: "**/.editorconfig"))
    outputs.dir(outputDir)
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args = ["--reporter=plain",
            "--reporter=checkstyle,output=${outputDir}ktlint-checkstyle-report.xml",
            "src/**/*.kt"]
}

afterEvaluate {
    check.dependsOn ktlint
    lint.dependsOn ktlint
    lintDebug.dependsOn ktlint
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    inputs.files(
            fileTree(dir: "src", include: "**/*.kt"),
            fileTree(dir: ".", include: "**/.editorconfig")
    )
    outputs.upToDateWhen { true }
    description = "Runs ktlint and autoformats your code."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args = ["-F", "src/**/*.kt"]
}

androidExtensions {
    experimental = true
}

configurations.all { config ->
    if (config.name.contains('Test')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}
